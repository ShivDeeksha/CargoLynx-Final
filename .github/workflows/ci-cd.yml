# .github/workflows/ci-cd.yml
name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: disha123
          POSTGRES_DB: CargoLynxFinal
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install backend dependencies
      run: |
        cd backend
        python -m venv venv
        . venv/bin/activate
        pip install -r requirements.txt

    - name: Run backend tests
      env:
        PYTHONPATH: ${{ github.workspace }}/backend
      run: |
        cd backend
        . venv/bin/activate
        pytest

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 14

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm install

    - name: Build frontend
      run: |
        cd frontend
        npm run build

    - name: Docker Compose Build and Up
      run: |
        docker-compose -f docker-compose.yml up --build -d

    - name: Docker Compose Down
      run: |
        docker-compose -f docker-compose.yml down
